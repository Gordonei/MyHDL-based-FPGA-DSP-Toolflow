MyHDL-based FPGA DSP Toolflow
README
Gordon Inggs ("my name with a dot instead of the space"@gmail.com)

Project Description
===================
Watch this space!
	*

Guide to Project Contents
=========================
1) Supporting - directory for utilities used to create/look at the data that might be used/created by the toolflow
	1.1) DFT_Arithmetic_Model - a simple arithmetic model for performing a DFT using my flexible-radix DFT algorithm 

2) Tooflow_Code - directory for the toolflow code, including the base Actor and Arc classes, as well as the base module development testbench scripts.
	2.1) HDFT_Code - blocks and scripts for the new version of my flexible-radix FFT algorithm
	2.2) Old_HDFT_Code - first iteration of the toolflow, used to implement my flexible-radix FFT algorithm which takes advantage of FPGA multipliers.

3) Platfroms - directory for platform-specific components of the toolflow
	3.1) Rhino - utilities and components for the Reconfigurable Hardware for computatioN and radiO (Rhino) Platform (www.rhinoplatform.org)
	*

Dependencies
============
1) Python
2) MyHDL (www.myhdl.org)
3) Numpy
4) Matplotlib
	*

Getting Started
===============
Still getting going, so haven't made a proper egg and install script, etc. I'm a big believer in tutorials, so I should get those going sometime.

That being said, its pretty straight-forward to use:
1) Make sure you have the dependencies installed
2) Copy the code in the Toolflow Code directory into the directory in which you intend to create your DSP system.
3) Import the various libraries as needed in your code. Look at the dev scripts for guidance as how to use the library.
	*

Development Plan
================
1) Fundemental Arc and Actor Classes - working in simulation, as well as conversion to Verilog. (done)
2) Developing Actors for flexible-radix DFT Algorithm (done)
3) Combining and testing DFT Algorithm Actors into an implementation of the flexible-radix DFT algorithm. (pending)
4) Developing Rhino Gateware Framework - combination of MyHDL and HDL for testing converted graphs on the Rhino Platform (www.rhinoplatform.org) (planned)
	*
